services:
    grafana:
        image: grafana/grafana-oss:latest
        container_name: grafana
        # logging:
        #     driver: loki
        #     options:
        #         loki-url: "https://${LOKI_USERNAME}:${LOKI_PASSWORD}@${LOKI_ENDPOINT}/loki/api/v1/push"
        #         loki-retries: 2
        #         loki-max-backoff: 800ms
        #         loki-timeout: 1s
        #         keep-file: "true"
        #         mode: "non-blocking"
        ports:
            - "${GRAFANA_PORT}:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
            - GF_AUTH_GENERIC_OAUTH_ENABLED=true
            - GF_AUTH_GENERIC_OAUTH_NAME=authentik
            - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=${AUTHENTIC_GRAFANA_CLIENT_ID}
            - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${AUTHENTIC_GRAFANA_CLIENT_SECRET}
            - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email
            - GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://${AUTHENTIC_ENDPOINT}/application/o/authorize/
            - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://${AUTHENTIC_ENDPOINT}/application/o/token/
            - GF_AUTH_GENERIC_OAUTH_API_URL=https://${AUTHENTIC_ENDPOINT}/application/o/userinfo/
            - GF_AUTH_SIGNOUT_REDIRECT_URL=https://${AUTHENTIC_ENDPOINT}/application/o/${AUTHENTIC_GRAFANA_SLUG}/end-session/
            # Optionally enable auto-login (bypasses Grafana login screen)
            - GF_AUTH_OAUTH_AUTO_LOGIN=true
            # Optionally map user groups to Grafana roles
            - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
            # Required if Grafana is running behind a reverse proxy
            - GF_SERVER_ROOT_URL=https://${GRAFANA_ENDPOINT}
        volumes:
            - "grafana_storage:/var/lib/grafana"
        # depends_on:
        #     loki:
        #         condition: service_healthy
        restart: unless-stopped
    loki:
        image: grafana/loki:latest
        container_name: loki
        command: "-config.file=/etc/loki/local-config.yaml -config.expand-env=true"
        volumes:
            - $PWD/loki-config.yml:/etc/loki/local-config.yaml:ro
        environment:
            - S3_BUCKET_NAMES=${S3_BUCKET_NAMES}
            - S3_ENDPOINT=${S3_ENDPOINT}
            - S3_REGION=${S3_REGION}
            - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
            - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
        ports:
            - "${LOKI_PORT}:3100"
        # healthcheck:
        #     test: ["CMD", "wget", "--spider", "--timeout=2", "--tries=1", "http://localhost:3100/ready"]
        #     interval: 10s
        #     timeout: 5s
        #     retries: 5
        #     start_period: 10s
        restart: unless-stopped
    alloy:
        image: grafana/alloy:latest
        container_name: alloy
        command:
            - run
            - --server.http.listen-addr=0.0.0.0:12345
            - --disable-reporting=true
            - --storage.path=/var/lib/alloy/data
            - /etc/alloy/
        volumes:
            - $PWD/alloy/:/etc/alloy/
            - alloy_data:/var/lib/alloy/data
        ports:
            - "${ALLOY_PORT}:12345"
        environment:
            - ALLOY_LOKI_USERNAME=${ALLOY_LOKI_USERNAME}
            - ALLOY_LOKI_PASSWORD=${ALLOY_LOKI_PASSWORD}
        restart: unless-stopped

volumes:
    grafana_storage: {}
    alloy_data: {}
