services:
    grafana:
        image: grafana/grafana-oss:latest
        container_name: grafana
        logging:
            driver: loki
            options:
                loki-url: "https://${LOKI_USERNAME}:${LOKI_PASSWORD}@${LOKI_ENDPOINT}/loki/api/v1/push"
                loki-retries: 2
                loki-max-backoff: 800ms
                loki-timeout: 1s
                keep-file: "true"
                mode: "non-blocking"
        ports:
            - "${GRAFANA_PORT:-3000}:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
        volumes:
            - "grafana_storage:/var/lib/grafana"
        depends_on:
            loki:
                condition: service_healthy
        restart: unless-stopped
    loki:
        image: grafana/loki:latest
        container_name: loki
        command: "-config.file=/etc/loki/local-config.yaml -config.expand-env=true"
        volumes:
            - $PWD/loki-config.yml:/etc/loki/local-config.yaml:ro
        environment:
            - S3_BUCKET_NAMES=${S3_BUCKET_NAMES}
            - S3_ENDPOINT=${S3_ENDPOINT}
            - S3_REGION=${S3_REGION}
            - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
            - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
        ports:
            - "${LOKI_PORT:-3100}:3100"
        healthcheck:
            test: ["CMD", "wget", "--spider", "--timeout=2", "--tries=1", "http://localhost:3100/ready"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped

volumes:
    grafana_storage: {}
